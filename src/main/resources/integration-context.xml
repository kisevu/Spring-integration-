<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/integration
                           http://www.springframework.org/schema/integration/spring-integration.xsd">

    <int:gateway service-interface="com.ameda.kevin.integration_spring.EnhancedPrinterGateway">
        <int:method name="print" request-channel="printChannel"/>
        <int:method name="uppercase" request-channel="upperCaseChannel"/>
    </int:gateway>

    <int:channel id="printChannel" />
    <int:channel id="upperCaseChannel" />


    <int:service-activator ref="upperCaseService" method="execute" input-channel="upperCaseChannel" />
    <bean id="upperCaseService" class="com.ameda.kevin.integration_spring.UpperCaseService" />

   <int:service-activator ref="printService" method="print" input-channel="printChannel"/>
    <bean id="printService" class="com.ameda.kevin.integration_spring.PrintService" />
</beans>

<!--
* Gateways
*****************************
* Gateways are used withing the spring integration to hide the messaging system.
* Gateways helps remove direct dependencies of spring integration components to our codes.
* To do the hiding we use the interfaces to accomplish the behavior which reduces tight
coupling between the spring integration and our application codes.
* By having such  void print(Message<?> message); and using the Message from spring integration imposes a tight
    coupling nature which is not greatly encouraged as loose coupling is the goal.
 * So with the EnhancedPrinterGateway where is the messaging system impl?
  * in the background Spring integration builds up a proxy and that is what gets injected into our class,
  when we autowire for EnhancePrinterGateway type. So we invoke methods on the interface the proxy receives them and
  tires them to the messaging system.
* explicitly mapped the methods to the channels in the gateway.
* we have the a method returning a string which is paired to the UpperCaseService class which has a method execute returning
a string
* I've achieved having the gateway with multiple methods and loosely coupled.
-->
