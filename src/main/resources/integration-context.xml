<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/integration
                           http://www.springframework.org/schema/integration/spring-integration.xsd">

    <int:gateway service-interface="com.ameda.kevin.integration_spring.PrinterGateway"
                 default-request-channel="inputChannel" />
    <int:channel id="inputChannel" />
    <int:channel id="outputChannel" />
    <int:channel id="filterChannel" />

    <int:header-filter header-names="privateKey" input-channel="inputChannel" output-channel="outputChannel" />
    <int:object-to-json-transformer input-channel="filterChannel" output-channel="outputChannel"/>

   <bean id="printService" class="com.ameda.kevin.integration_spring.PrintService" />
   <int:service-activator ref="printService" method="print" input-channel="outputChannel"/>
</beans>

<!--
* Another way we can transform a message is through the header filter
**************************
*  if there's a header that should not be passed down stream, the header filter can remove it.
* This includes the security which should not be cascaded down stream.
* working with the header filter we need having the header field to our message
* We have the header called privateKey which we wouldn't want to be passed downstream

-->
