<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           https://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/file
           http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">


    <int-file:inbound-channel-adapter
            directory="file:src/test/read"
            channel="inboundChannel"
            filename-pattern="sample.txt">

        <int:poller fixed-rate="10000"/>
    </int-file:inbound-channel-adapter>

    <int:channel id="inboundChannel"/>

    <int-file:outbound-channel-adapter
            directory="file:src/test/write"
            channel="inboundChannel"
            auto-create-directory="true"
            mode="REPLACE"
            delete-source-files="true">
    </int-file:outbound-channel-adapter>
</beans>

<!--
* Writing files to the file system using spring integration outbound channel adapter
************************************************************************************
* namespace provides a convenient approach to using file writing message handler to write to file system.
* When working with the int-file outbound-channel adapter, it accepts messages that have a payload of type;
a) file b)bytearray c) string
* in our place we'll be working with the file for our example at the top
-->
