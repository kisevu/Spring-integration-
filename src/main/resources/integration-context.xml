<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           https://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/jms
           https://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

     <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
         <property name="targetConnectionFactory">
             <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                 <property name="brokerURL" value="tcp://localhost:61616"/>
             </bean>
         </property>
     </bean>
    <bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="sample.queue"> </constructor-arg>
    </bean>
    <int-jms:outbound-channel-adapter
            connection-factory="connectionFactory"
            channel="outboundChannel"
            destination="queue"/>

    <int-jms:inbound-channel-adapter connection-factory="connectionFactory" destination="queue" channel="jmsChannel">
        <int:poller fixed-rate="7000"/>
    </int-jms:inbound-channel-adapter>

    <int:object-to-string-transformer
            input-channel="inboundChannel"
            output-channel="outboundChannel">
    </int:object-to-string-transformer>

    <int:gateway service-interface="com.ameda.kevin.integration_spring.PersonGateway"
                 default-request-channel="inboundChannel">
    </int:gateway>


    <int:channel id="jmsChannel"/>
    <int:channel id="inboundChannel"/>
    <int:channel id="outboundChannel"/>


    <bean id="printerService" class="com.ameda.kevin.integration_spring.PrintService"/>
    <int:service-activator ref="printerService" method="print"  input-channel="jmsChannel"/>
</beans>

<!--
* Integration with JMS (Java Message Service) JMS Inbound Channel Adapter
*******************************************************
*  JMS is an API that detects how applications communicate.
*  The API contains a list of interfaces which a java application can use to create, send, receive or read
messages.
* JMS provides for loose coupling between systems and creates reliable transport between the nodes.
* JMS Channel adapters are used to communicate with activemq server.
* JMS Outbound channel Adapter to send a message to jms server
Process of how everything is working
********************************************
*  JMS Inbound Channel Adapter is used to retrieve messages from a JMS queue by polling the queue
for any new messages.The new message found is then sent to the JMS system for distribution.
So the destination is where we are reading the messages and the channel is where the messages read off of the queue will
be sent. We see the jmsChannel is pretty much bound to the PrinterService which does print the gotten messages. The printing
is done through the invocation of the toString() method.
N/B Any time we are receiving messages from a message source such as activemq or jms server, we need to be operating
in one or two manners:
 - Tha resource is going to push us the message.
 - We're reaching out and pull that resource.
 (That's the reason we're going to configure a poller property)
-->
