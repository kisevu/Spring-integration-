<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           https://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/file
           http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">


    <int-file:inbound-channel-adapter directory="file:src/test" channel="inboundChannel" filename-pattern="sample.txt">
        <int:poller fixed-rate="10000"/>
    </int-file:inbound-channel-adapter>
    <int:channel id="inboundChannel"/>

    <bean id="filePrinter" class="com.ameda.kevin.integration_spring.FilePrinter"/>
    <int:service-activator ref="filePrinter" input-channel="inboundChannel"> </int:service-activator>
</beans>


<!--
* File system integrations
*****************************
* Exploration of external systems integrations. Focusing on systems outside our application.
* So far all the workings of the other chapters included internal message exchanges with spring integrations.
* Here we're going to use endpoints such as Gateways and Adapters to reach beyond our applications.
*  We can use spring integration to perform integrations with external systems such as JMS, RDBMS,FTP servers and other
systems.
* File namespace provides various message endpoints
a) Reading files File system integrations... (We'll use the Inbound channel adapter within file namespace in
spring integration)
-->
