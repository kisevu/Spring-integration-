<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           https://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/jms
           https://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

    <int-jms:inbound-gateway
            connection-factory="connectionFactory"
            request-channel="jmsChannel"
            request-destination="queue"
            default-reply-destination="replyQueue"/>

     <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
         <property name="targetConnectionFactory">
             <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                 <property name="brokerURL" value="tcp://localhost:61616"/>
             </bean>
         </property>
     </bean>

    <bean id="replyQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="reply.queue"> </constructor-arg>
    </bean>

    <bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="sample.queue"> </constructor-arg>
    </bean>

    <int-jms:outbound-channel-adapter
            connection-factory="connectionFactory"
            channel="outboundChannel"
            destination="queue"/>


    <int:object-to-string-transformer
            input-channel="inboundChannel"
            output-channel="outboundChannel">
    </int:object-to-string-transformer>

    <int:gateway service-interface="com.ameda.kevin.integration_spring.PersonGateway"
                 default-request-channel="inboundChannel">
    </int:gateway>


    <int:channel id="jmsChannel"/>
    <int:channel id="inboundChannel"/>
    <int:channel id="outboundChannel"/>


    <bean id="printerService" class="com.ameda.kevin.integration_spring.PrintService"/>
    <int:service-activator ref="printerService" method="print"  input-channel="jmsChannel"/>
</beans>

<!--
* Integration with JMS (Java Message Service) JMS Inbound Gateway
*******************************************************
* There are gateways provided in jms integrations.
* JMS Inbound Gateway is used to receive messages from a JMS server and provide a response to the received message.
* So in the gateway, we are going to receive our message from our jms server/activemq server. And works somewhat like a
Message Driven channel Adapter. (The message is going to be pushed to us.)
* We'll be receiving the message via the push from the server using the Inbound Gateway. The gateway is going to put
that message to a channel. Once the message is put in the channel, it is going to be delivered to an endpoint where some
processing is to occur and a message can be sent back.
* A little change for the PrinterService to return a message
-->
